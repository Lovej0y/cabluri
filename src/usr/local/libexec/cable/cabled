#!/bin/sh -e

# Setup restricted environment
# (rely on init via sudo to set up TMPDIR)
. /usr/local/libexec/suexec/suprofile


# Preliminary variables
msgidre='[0-9a-f]{40}'
queue=${HOME}/persist/cables/queue
rqueue=${HOME}/persist/cables/rqueue


# Initialization tasks
if [ "$1" = init ]; then
    find ${rqueue} -maxdepth 1 -type d -regextype posix-egrep \
                   -regex "${rqueue}/${msgidre}\.new" -print0 \
        | xargs -0 rm -rf --one-file-system --
    exit
fi


# Variables
prefix=`dirname $0`
loop="${prefix}"/loop
wpid=0


# Set some traps
trap 'set +e; kill ${wpid} 2>/dev/null' 0
trap : INT QUIT TERM SEGV


exec 1>>${TMPDIR}/cabled.log 2>&1

# Read inotify events (close events may be ignored)
# NOTE: inotifywait dies on blocking output
# TODO: umount events (wait for mount), synthetic events (retries),
#       message timeout, proper signal handling, proper logging,
#       process pooling
while :; do
    set +e
    pcount=`pgrep -u ${USER} -x flock | wc -l`
    qmsgids=`find ${queue}   -maxdepth 1 -type d -regextype posix-egrep \
                             -regex "${queue}/${msgidre}(\.del)?"  -printf 'queue:%f\n'`
    rqmsgids=`find ${rqueue} -maxdepth 1 -type d -regextype posix-egrep \
                             -regex "${rqueue}/${msgidre}(\.del)?" -printf 'rqueue:%f\n'`
    set -e

    for entry in ${qmsgids} ${rqmsgids}; do
        qtype="${entry%%:*}"
        dirid="${entry#*:}"

        logger -p 6 -t cabled "processing ${qtype}/${dirid}"
        "${loop}" "${qtype}" "${dirid}" &
    done

    sleep 60 & wpid=$!
    wait ${wpid}
done
