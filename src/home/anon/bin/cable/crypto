#!/bin/sh -e

umask 077
export LC_ALL=C


if [ $# != 2 ]; then
    echo "Format: $0 send|recv|ack <msgid>"
    exit 1
fi


# Helpers
cms=`dirname "$0"`/cms

# Directories
ssldir=${SECURITY_HOME}/ssl
queue=${HOME}/persist/cables/queue
rqueue=${HOME}/persist/cables/rqueue
inbox=${HOME}/persist/mail/inbox

# Parameters
cmd="$1"
msgid="$2"


error() {
    echo "crypto: $1" 1>&2
    exit 1
}


getfreemsg() {
    local last=`find ${inbox} -maxdepth 1 -type f -regex '.*/[1-9][0-9]*' -printf '%f\n' \
        | sort -nr | head -1`

    if [ -z "${last}" ]; then
        last=0
    fi

    # dash supports $((...))
    last=$((last + 1))

    if [ -e ${inbox}/${last} ]; then
        error "could not create new message name"
    fi

    echo ${last}
}


# Sanity checks
[ ${#msgid} = 40 ] || error "bad msgid"

check_userhost() {
    [ ${#1} = 32 ] || error "bad username"
    [ ${#2} != 0 ] || error "bad hostname"
}


case "${cmd}" in
send)
    # <send> [crypto loop]
    if [ -e ${queue}/"${msgid}"/${cmd}.rdy ]; then
        if ${cms} ${cmd} ${ssldir} ${queue}/"${msgid}" >/dev/null; then
            mv ${queue}/"${msgid}"/${cmd}.rdy ${queue}/"${msgid}"/${cmd}.ok
            rm ${queue}/"${msgid}"/message
        else
            mv ${queue}/"${msgid}"/${cmd}.rdy ${queue}/"${msgid}"/${cmd}.req
            error "${cmd} failed"
        fi
    else
        error "${cmd}.rdy not found"
    fi
    ;;

recv)
    # <recv> [crypto loop]
    if [ -e ${rqueue}/"${msgid}"/${cmd}.rdy ]; then
        if ${cms} ${cmd} ${ssldir} ${rqueue}/"${msgid}" >/dev/null; then
            username=`cat ${rqueue}/"${msgid}"/username`
            hostname=`cat ${rqueue}/"${msgid}"/hostname`
            check_userhost "${username}" "${hostname}"

            date=`date -uR`

            /bin/gzip -cd ${rqueue}/"${msgid}"/message            \
                | formail -z -I 'From '                           \
                             -i "From: <${username}@${hostname}>" \
                             -I "X-Received-Date: ${date}"        \
                > ${rqueue}/"${msgid}"/message.ibx

            freemsg=`getfreemsg`
            mv -nT ${rqueue}/"${msgid}"/message.ibx ${inbox}/"${freemsg}"

            if [ ! -e ${rqueue}/"${msgid}"/message.ibx ]; then
                mv ${rqueue}/"${msgid}"/${cmd}.rdy ${rqueue}/"${msgid}"/${cmd}.ok
                rm ${rqueue}/"${msgid}"/message    ${rqueue}/"${msgid}"/message.out
            else
                error "failed to move received message to inbox"
            fi
        else
            mv ${rqueue}/"${msgid}"/${cmd}.rdy ${rqueue}/"${msgid}"/${cmd}.req
            error "${cmd} failed"
        fi
    else
        error "${cmd}.rdy not found"
    fi
    ;;

ack)
    # <ack> [crypto loop]
    if [ -e ${queue}/"${msgid}"/${cmd}.rdy ]; then
        if ${cms} ${cmd} ${ssldir} ${queue}/"${msgid}" >/dev/null; then
            username=`cat ${queue}/"${msgid}"/username`
            hostname=`cat ${queue}/"${msgid}"/hostname`
            check_userhost "${username}" "${hostname}"

            date=`date -uR`

            (cat ${queue}/"${msgid}"/message.hdr; echo;                                 \
                echo "Verified message delivery to ${username}@${hostname} (${date}).") \
                > ${queue}/"${msgid}"/message.ack

            freemsg=`getfreemsg`
            mv -nT ${queue}/"${msgid}"/message.ack ${inbox}/"${freemsg}"

            if [ ! -e ${queue}/"${msgid}"/message.ack ]; then
                mv ${queue}/"${msgid}"/${cmd}.rdy  ${queue}/"${msgid}"/${cmd}.ok
                rm ${queue}/"${msgid}"/message.out ${queue}/"${msgid}"/receipt.out \
                   ${queue}/"${msgid}"/message.sig ${queue}/"${msgid}"/message.hdr
            else
                error "failed to move delivery acknowledgment to inbox"
            fi
        else
            mv ${queue}/"${msgid}"/${cmd}.rdy ${queue}/"${msgid}"/${cmd}.req
            error "${cmd} failed"
        fi
    else
        error "${cmd}.rdy not found"
    fi
    ;;

*)
    error "unknown command"
    ;;
esac
