#!/bin/sh -e

umask 077
export LC_ALL=C


# Creates ${queuedir}/<msgid>{username,hostname,message,send.req}
queuedir=${HOME}/persist/cables/queue

msgidbytes=20
emailregex='^[a-z2-7]{32}@[a-z2-7]{16}\.onion$'

# Temporary directory on same filesystem
tmpdir=`mktemp -d --tmpdir=${queuedir}`

trap 'rm -r ${tmpdir}' 0
trap : INT QUIT TERM SEGV


error() {
    echo "send: $1" 1>&2
    exit 1
}


# Read the message on stdin, and remove X-*: headers
formail -fz -I X- > ${tmpdir}/message


# Prepare headers for local MUA confirmation message
formail -f -X From: -X To: -X Cc: -X Bcc: -X Subject: -X Date: \
        -X Message-ID: -X In-Reply-To: -X References:          \
    < ${tmpdir}/message > ${tmpdir}/message.hdr


# Extract bare x@y addresses
addresses=`formail -fcz -x To: -x Cc: -x Bcc: < ${tmpdir}/message \
    | tr , '\n'                                                   \
    | sed 's/^.*<\([^>]*\)>/\1/'                                  \
    | sed 's/^[[:blank:]]\+//; s/[[:blank:]]\+$//'`

# Extract the bare From: address
fromaddr=`formail -fcz -x From:               < ${tmpdir}/message \
    | sed 's/^.*<\([^>]*\)>/\1/'`


# Check address validity to prevent inadvertent information leaks
for addr in "${fromaddr}" ${addresses}; do
    if ! echo "x ${addr}" | sed 's/^x //' | egrep -q "${emailregex}"; then
        error "unsupported address: ${addr}"
    fi
done


# Extract the from-host
echo "x ${fromaddr}" | cut -d@ -f2 > ${tmpdir}/shostname


# Remove Bcc: header and replace Date: with an UTC one:
date=`date -uR`
formail -f -I Bcc: -I "Date: ${date}" < ${tmpdir}/message \
    | gzip -c9nT > ${tmpdir}/message.gz
mv ${tmpdir}/message.gz ${tmpdir}/message


# Create actual <msgid> directories, one per addressee
for addr in ${addresses}; do
    # generate <msgid> and create as subdirectory
    msgid=`openssl rand -hex ${msgidbytes}`
    mkdir ${tmpdir}/${msgid}

    # extract username and hostname from address, and generate respective files
    echo ${addr} | sed 's/@.*//' > ${tmpdir}/${msgid}/username
    echo ${addr} | sed 's/.*@//' > ${tmpdir}/${msgid}/hostname

    # copy the sanitized message (assume the files will not be modified later)
    ln ${tmpdir}/message ${tmpdir}/message.hdr ${tmpdir}/shostname \
       ${tmpdir}/${msgid}/

    # atomically move directory to queue dir, and create send.req indicator
    # (works even if the move is not atomic)
    mv -T ${tmpdir}/${msgid} ${queuedir}/${msgid}
    touch ${queuedir}/${msgid}/send.req
done
